upstream app {​​​​​​​​
    server 127.0.0.1:3000;
}​​​​​​​​

upstream cars {​​​​​​​​
    server 127.0.0.1:4000;
}

upstream ws {​​​​​​​​
    server 127.0.0.1:4001;
}​​​​​​​​

upstream chat {​​​​​​​​
    server 127.0.0.1:5000;
}

​​​​​​​​
server {
    listen 80;
    server_name cars.biribadi.com;
    client_max_body_size 10M;
    location / {
        proxy_pass http://cars/;
        client_max_body_size 10M;
        if ($request_method = 'OPTIONS') {​​​​​​​​
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            add_header 'Access-Control-Allow-Credentials' true;
            return 200;
        }
    }
}



# server {
#   listen 80;
#   listen [::]:80;

#   server_name prod.myexample.com;
#   root /var/www/PROD/myexample.com;

#   location / {
#     try_files $uri $uri/ /index.html =404;
#   }
# }


# server {
#   listen 80;
#   listen [::]:80;

#   server_name dev.myexample.com;
#   root /var/www/DEV/myexample.com;

#   location / {
#     try_files $uri $uri/ /index.html =404;
#   }
# }


server {
    listen 80;
    listen [::]:80;

    server_name statusmagnum.biribadi.com;
    root /home/your_email/status-magnum;

    gzip on;
    gzip_types text/css application/javascript application/json image/svg+xml;
    gzip_comp_level 9;
    etag on;

    location / {
        # try_files $uri $uri/ /index.html;
        try_files $uri $uri/ /index.html =404;
    }

    location /static/ {
        add_header Cache-Control max-age=31536000;
    }

    location /index.html {
        add_header Cache-Control no-cache;
    }

    location /config.json {
        add_header Cache-Control no-cache;
    }
}





server {
    listen 80;
    server_name chat.biribadi.com;
    client_max_body_size 10M;
    location / {
        proxy_pass http://chat/;
        client_max_body_size 10M;
        if ($request_method = 'OPTIONS') {​​​​​​​​
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            add_header 'Access-Control-Allow-Credentials' true;
            return 200;
        }
    }
}



server {​​​​​​​​
    listen 80;
    # use "_" to catch-all requests
    server_name _;
    client_max_body_size 10M;
    location / {​​​​​​​​
        proxy_pass http://app/;
        # alternatively you can write localhost too
        # but an alias is better
        # proxy_pass http://localhost:4000;

        client_max_body_size 10M;
        if ($request_method = 'OPTIONS') {​​​​​​​​
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            add_header 'Access-Control-Allow-Credentials' true;
            return 200;
        }​​​​​​​​
    }

    location /dev {
        rewrite ^/dev/(.*)$ /$1 break;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://localhost:4000;
    }

    location /api/user {
        rewrite ^/api/user/(.*)$ /$1 break;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://localhost:7001;
    }​​​​​​​​
​​​​​​​
}​​​​​​​​


